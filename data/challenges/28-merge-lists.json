{
  "problem_number": 28,
  "problem_name": "Merge Two Lists",
  "difficulty": "average",
  "programming_language": "python",
  "description": "Write a function called `merge_alternating(list1, list2)` that merges two lists by alternating elements. If one list is longer, append the remaining elements.",
  "input_specification": "Input format will be provided.",
  "output_specification": "Expected output format will be shown.",
  "sample_inputs": [
    "[[1, 2, 3], ['a', 'b', 'c']]",
    "[[1, 2], ['a', 'b', 'c', 'd']]",
    "[[10, 20, 30, 40], ['x', 'y']]",
    "[[], [1, 2, 3]]"
  ],
  "sample_outputs": [
    "[1, 'a', 2, 'b', 3, 'c']",
    "[1, 'a', 2, 'b', 'c', 'd']",
    "[10, 'x', 20, 'y', 30, 40]",
    "[1, 2, 3]"
  ],
  "explanations": [
    "Example explanation",
    "Example explanation",
    "Example explanation",
    "Example explanation"
  ],
  "notes": [
    "Pay attention to edge cases",
    "Test with different input values"
  ],
  "hints": [
    "Break down the problem into smaller steps",
    "Think about potential edge cases"
  ],
  "starter_code": "def merge_alternating(list1, list2):\n    # Write your code here\n    pass",
  "test_cases": [
    {
      "input": [
        [
          1,
          2,
          3
        ],
        [
          "a",
          "b",
          "c"
        ]
      ],
      "expected": [
        1,
        "a",
        2,
        "b",
        3,
        "c"
      ]
    },
    {
      "input": [
        [
          1,
          2
        ],
        [
          "a",
          "b",
          "c",
          "d"
        ]
      ],
      "expected": [
        1,
        "a",
        2,
        "b",
        "c",
        "d"
      ]
    },
    {
      "input": [
        [
          10,
          20,
          30,
          40
        ],
        [
          "x",
          "y"
        ]
      ],
      "expected": [
        10,
        "x",
        20,
        "y",
        30,
        40
      ]
    },
    {
      "input": [
        [],
        [
          1,
          2,
          3
        ]
      ],
      "expected": [
        1,
        2,
        3
      ]
    }
  ],
  "time_limit": 300
}