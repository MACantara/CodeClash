{
  "problem_number": 26,
  "problem_name": "List Comprehension Filter",
  "difficulty": "easy",
  "programming_language": "java",
  "description": "Write a method called `filter_even(numbers)` that returns a list of only the even numbers using list comprehension.",
  "input_specification": "Input format will be provided.",
  "output_specification": "Expected output format will be shown.",
  "sample_inputs": [
    "[[1, 2, 3, 4, 5, 6]]",
    "[[10, 15, 20, 25, 30]]",
    "[[1, 3, 5, 7]]",
    "[[2, 4, 6, 8]]"
  ],
  "sample_outputs": [
    "[2, 4, 6]",
    "[10, 20, 30]",
    "[]",
    "[2, 4, 6, 8]"
  ],
  "explanations": [
    "For input [[1, 2, 3, 4, 5, 6]], output is [2, 4, 6]",
    "For input [[10, 15, 20, 25, 30]], output is [10, 20, 30]",
    "For input [[1, 3, 5, 7]], output is []",
    "For input [[2, 4, 6, 8]], output is [2, 4, 6, 8]"
  ],
  "notes": [
    "Implement the List Comprehension Filter problem correctly",
    "Consider edge cases and boundary conditions",
    "Test your solution with various inputs"
  ],
  "hints": [
    "Read the problem description carefully",
    "Start with the base case or simple scenario",
    "Build up to the complete solution step by step"
  ],
  "starter_code": "public class Solution {\n    public static void listComprehensionFilter() {\n        // Write your code here\n    }\n}",
  "test_cases": [
    {
      "input": [
        [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      ],
      "expected": [
        2,
        4,
        6
      ]
    },
    {
      "input": [
        [
          10,
          15,
          20,
          25,
          30
        ]
      ],
      "expected": [
        10,
        20,
        30
      ]
    },
    {
      "input": [
        [
          1,
          3,
          5,
          7
        ]
      ],
      "expected": []
    },
    {
      "input": [
        [
          2,
          4,
          6,
          8
        ]
      ],
      "expected": [
        2,
        4,
        6,
        8
      ]
    }
  ]
}